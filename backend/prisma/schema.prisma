

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  password      String
  avatar        String?
  todos         Todo[]
  logs          Log[]
  goals         Goal[]
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Todo {
  id          String   @id @default(cuid())
  title       String
  description String?
  icon        String   @default("FileText")
  status      Status   @default(TODO)
  dueDate     DateTime
  dueTime     String?
  priority    String   @default("medium")
  meetingLink String?
  warning     String?
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([status])
}

model Log {
  id        String   @id @default(cuid())
  content   String
  category  String   @default("work")
  timestamp DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([timestamp])
}

model Goal {
  id                 String    @id @default(cuid())
  title              String
  description        String?
  icon               String    @default("ðŸŽ¯")
  period             String    @default("daily")
  reminderFrequency  String    @default("daily")
  targetDate         DateTime?
  progress           Int       @default(0)
  category           String    @default("personal")
  userId             String
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@index([userId])
  @@index([period])
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([token])
}

enum Status {
  TODO
  IN_PROGRESS
  COMPLETED
}
